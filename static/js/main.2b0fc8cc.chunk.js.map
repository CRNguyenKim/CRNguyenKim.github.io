{"version":3,"sources":["static/images/logo_nk_dark.png","helpers/colors.js","helpers/timeParser.js","components/APIToolbar.js","redux/actions/types.js","redux/reducers/dashboard.js","redux/reducers/auth.js","components/circleChart.js","redux/actions/error.js","redux/reducers/error.js","redux/store.js","redux/actions/dashboards.js","helpers/APIservices.js","components/generalChart.js","components/columnChart.js","components/CommentSection.js","redux/actions/auth.js","views/Home.js","components/Alerts.js","views/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","secondaryDark","mainLight","ratingColors","extractFromTimestamp","timestamps","extractKey","map","time","t","Date","getHours","concat","getDate","getMonth","getFullYear","style","responsive","display","alignItems","rowOption","margin","selected","color","ICONS_MAP","DURATIONS","faCalendarAlt","TIMER","faStopwatch","LIMITS","faListOl","VIEWS","faEye","LOCATIONS","faMapMarkerAlt","RowOption","_this","this","props","data","length","dropdown","react_default","a","createElement","Form","Group","controlId","Col","xs","md","xl","sm","lg","index_es","icon","name","toUpperCase","Control","as","onChange","e","onOptionChange","target","value","backgroundColor","val","key","Row","Object","objectSpread","justifyContent","ButtonGroup","aria-label","Button","size","variant","selections","onClick","Component","ToolbarQuery","option","_this2","_this3","Container","fluid","keys","options","APIToolbar_RowOption","includes","faSyncAlt","d","Number","h","Math","floor","m","s","slice","secondsToHms","countdown","SET_MODES","SET_DURATIONS","SET_LIMITS","SET_TIMER","SET_VIEWS","SET_CATEGORIES","SET_LOCATIONS","SET_COUNTDOWN","SET_DATA","SET_SERIES","APPEND_SERIES","initialState","modes","durations","limits","views","timer","series","labels","locations","entityReducer","prefixName","arguments","undefined","state","action","type","payload","categories","updateInterval","token","localStorage","getItem","isAuthenticated","isLoading","user","auth","setItem","username","removeItem","ERRORS_HEADING","success","error","reducer","combineReducers","generalDashboard","entityDashboard","circleDashboard","columnDashboard","messages","store","createStore","applyMiddleware","thunk","setAPIOption","prefix","defineProperty","setData","setSeries","appendSeries","setTimeCountdown","tick","timestampKey","apiEndPoint","extractDataByKey","serialData","label","tickCountdown","chartName","axios","defaults","baseURL","headers","common","Index","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getLocations","get","params","x-access-token","getState","then","res","updateCountdown","update","resetTimer","dispatch","clearInterval","setInterval","newData","all","updateDataByType","optionChange","chart","id","width","foreColor","fontFamily","fontSize","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","fill","opacity","title","text","align","stroke","colors","theme","palette","plotOptions","pie","customScale","offsetX","offsetY","expandOnClick","dataLabels","offset","minAngleToShowLabel","donut","background","tooltip","enabled","obj","duration","location","rated","limit","push","sort","b","borderRadius","marginTop","flexDirection","APIToolbar","react_apexcharts_min_default","connect","strokeWidth","resetSeries","ApexChart","exec","kind","xaxis","yaxis","min","tickAmount","max","catch","err","console","log","setState","optionsMixedChart","curve","markers","strokeOpacity","hover","grid","borderColor","mode","legend","height","radius","minHeight","keyMap","avg","total","apply","toConsumableArray","newSeries","overrideOptions","rating","lines","container","overflowY","maxHeight","sastisfactionIcon","faAngry","faFrown","faMeh","faSmile","faLaughBeam","Comment","date","toLocaleString","feedback","comments","position","top","ListGroup","CommentSection_Comment","created_at","comment","brand","btn","border","circleChart","generalChart","columnChart","CommentSection_Index","react_router","to","AlertError","Alert","dismissible","onClose","Heading","heading","password","whiteSpace","padding","Alerts_AlertError","fullWidth","Label","placeholder","Text","className","post","response","App","react_router_dom","path","component","Login","exact","Home","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b0fc8cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_nk_dark.c709324c.png\";","export const mainDark = '#202534';\nexport const secondaryDark = '#303444';\nexport const colorScheme = '#971243';\nexport const mainLight = '#80deea';\nexport const colorGrid = '#78909c';\nexport const darkFade = '#3C495C'\n\nexport const gradient1 = 'rgba(160, 144, 223, 0.14)';\nexport const gradient2= 'rgba(223, 144, 215, 0.14)';\n\n\nexport const ratingColors = ['#af4448', '#ff8a65', '#ffd54f', '#aed581', '#00bfa5'];","const weekDays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thu', 'Friday', 'Sat'];\nconst months = [\"Jan\", \"Feb\", \"Mar\",\"Apr\", \"May\",\"June\", \"July\", \"Aug\", \"Sep\", \"Oct\",\"Nov\",\"Dec\" ];\n\nexport const extractFromTimestamp = (timestamps, extractKey) => {\n\n    switch(extractKey){\n        case 'hour':\n            return timestamps.map( time => { \n                var t = new Date(time); \n                return  + t.getHours() > 12 ? t.getHours() + 'PM': t.getHours() + 'AM'  });\n\n        \n        case 'day':\n            return timestamps.map( time => { \n                var t = new Date(time);\n                return `${t.getDate()}/${t.getMonth()}`;}\n            )\n\n        \n        case 'month':\n            return timestamps.map( time => { \n                var t = new Date(time);\n                return `${( t.getMonth() + 1) % 12 === 0 ? 12 : (t.getMonth() + 1) % 12}/${t.getFullYear()}`\n            }\n        );\n\n\n        default:\n            break\n            \n    }\n}\n\nexport const secondsToHms = (d) => {\n    d = Number(d);\n\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    var s = Math.floor(d % 3600 % 60);\n\n    return ('0' + h).slice(-2) + \":\" + ('0' + m).slice(-2) + \":\" + ('0' + s).slice(-2);\n}","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Row, Col, Form } from 'react-bootstrap';\nimport { mainLight, secondaryDark } from '../helpers/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt, faStopwatch, faListOl, faEye, faSyncAlt, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { secondsToHms } from '../helpers/timeParser';\n\nconst style = {\n    responsive: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    rowOption: {\n        margin: '10px 0px 10px 0px'\n    },\n    selected: {\n        color: '#ffffff'\n    }\n}\n\nconst ICONS_MAP = {\n    'DURATIONS': faCalendarAlt,\n    'TIMER': faStopwatch,\n    'LIMITS': faListOl,\n    'VIEWS': faEye,\n    'LOCATIONS': faMapMarkerAlt\n}\n\n\nclass RowOption extends Component {\n    render() {\n        return (\n            this.props.data.length ?\n                this.props.dropdown ?\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Col xs={3} md={3} xl={3} sm={3} lg={3} style={{ color: mainLight }}>\n                            <p style={{ margin: 0 }}> <FontAwesomeIcon icon={ICONS_MAP[this.props.name.toUpperCase()]} /> </p>\n                        </Col>\n\n                        <Form.Control as=\"select\" onChange={(e) => this.props.onOptionChange(this.props.name, e.target.value)}\n                            style={{ backgroundColor: secondaryDark, color: '#ffffff' }}>\n                            {\n                                this.props.data.map(val =>\n                                    (<option\n                                        key={val}>\n                                        {val}\n                                    </option>))\n                            }\n                        </Form.Control>\n\n\n                    </Form.Group>\n                    :\n                    <Row style={{ ...style.responsive, ...style.rowOption }}>\n                        <Col xs={3} md={3} xl={3} sm={3} lg={3} style={{ color: mainLight }}>\n                            <p style={{ margin: 0 }}> <FontAwesomeIcon icon={ICONS_MAP[this.props.name.toUpperCase()]} /> </p>\n                        </Col>\n                        <Col xs={9} md={9} xl={9} sm={9} lg={9} style={{ ...style.responsive, justifyContent: 'center' }}>\n                            <ButtonGroup aria-label=\"Basic example\">\n                                {\n                                    this.props.data &&\n                                    this.props.data.map(val =>\n                                        (<Button size='sm' variant='outline-info'\n                                            key={val}\n                                            style={this.props.selections[this.props.name] === val ? style.selected : null}\n                                            onClick={() => this.props.onOptionChange(this.props.name, val)} >\n                                            {val}\n                                        </Button>))\n                                }\n                            </ButtonGroup>\n                        </Col>\n                    </Row >\n                : ''\n        )\n    }\n}\n\n\nclass ToolbarQuery extends Component {\n\n\n    onOptionChange = (option, value) => {\n        this.props.onOptionChange(option, value)\n    }\n\n\n\n    render() {\n\n        const dropdown = this.props.dropdown ? this.props.dropdown : []\n        return (\n            <Container fluid>\n                <Row>\n                    <Col xs={12} sm={12} md={12} xl={8} lg={8}>\n                        {\n                            Object.keys(this.props.options).map((val) => {\n                                return <RowOption\n                                    name={val}\n                                    data={this.props.options[val]}\n                                    key={val}\n                                    onOptionChange={this.onOptionChange}\n                                    selections={this.props.selections}\n                                    dropdown={dropdown.includes(val)}\n\n                                />\n                            })\n                        }\n                    </Col>\n\n                    <Col xs={12} sm={12} md={12} xl={4} lg={4}>\n                        <Row style={{ ...style.responsive, ...style.rowOption }}>\n                            <Col xs={3} md={3} xl={3} sm={3} lg={3} style={{ color: mainLight, ...style.responsive, }}>\n                                <p style={{ margin: 0 }}> <FontAwesomeIcon icon={faSyncAlt} />  </p>\n                            </Col>\n                            <Col xs={9} md={9} xl={9} sm={9} lg={9} style={{ color: mainLight, ...style.responsive, justifyContent: 'center' }}>\n                                <p style={{ margin: 0 }}>{secondsToHms(this.props.countdown)}</p>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default ToolbarQuery;\n\n","/****** Toolbar ********/\nexport const SET_MODES = 'SET_MODES';\nexport const SET_DURATIONS = 'SET_DURATIONS';\nexport const SET_LIMITS = 'SET_LIMITS';\nexport const SET_TIMER = 'SET_TIMER';\nexport const SET_VIEWS = 'SET_VIEWS';\nexport const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const SET_LOCATIONS = 'SET_LOCATIONS';\n\n// flow control\nexport const SET_COUNTDOWN = 'SET_COUNTDOWN';\n\n// Series data\nexport const SET_DATA = 'SET_DATA';\nexport const SET_LABELS = 'SET_LABELS';\nexport const SET_SERIES = 'SET_SERIES';\nexport const APPEND_SERIES = 'APPEND_SERIES';\n\n\n/****** AUTHENTCATION ******/\n\nexport const USER_LOADED = 'USER_LOAD';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_LOADING = 'USER_LOADING';\n\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\n/****** ERRORs *******/\nexport const GET_ERROR = 'GET_ERROR';\nexport const GET_SUCCESS = 'GET_SUCCESS';\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\n\n\n\n","import { SET_DATA, SET_MODES, SET_DURATIONS, SET_LIMITS, SET_TIMER, SET_VIEWS, SET_CATEGORIES, SET_SERIES, APPEND_SERIES, SET_LOCATIONS, SET_COUNTDOWN } from '../actions/types';\n\n\nconst initialState = {\n    modes: '',\n    durations: '',\n    limits: '',\n    views: '',\n    timer: '',\n    series: [],\n    data: [],\n    labels: [],\n    locations: []\n}\n\n\nexport default function entityReducer(prefixName=''){\n    \n    return function reducer(state = initialState, action) {\n\n        switch (action.type) {\n            \n            case prefixName + SET_MODES:\n                return {\n                    ...state,\n                    modes: action.payload.modes\n                }\n\n            case prefixName + SET_DURATIONS:\n                return {\n                    ...state,\n                    durations: action.payload.durations\n                }\n\n            case prefixName + SET_LIMITS:\n                return {\n                    ...state,\n                    limits: action.payload.limits\n                }\n\n\n            case prefixName + SET_VIEWS:\n                return {\n                    ...state,\n                    views: action.payload.views\n                }\n\n            case prefixName + SET_TIMER:\n                return {\n                    ...state,\n                    timer: action.payload.timer\n                }\n\n            case prefixName + SET_DATA:\n                return {\n                    ...state,\n                    data: action.payload.data\n                }\n\n            case prefixName + SET_CATEGORIES:\n                return {\n                    ...state,\n                    categories: action.payload.categories\n                }\n\n            case prefixName + SET_SERIES:\n                return {\n                    ...state,\n                    series: action.payload.series\n                }\n            \n            case prefixName + APPEND_SERIES:\n                return {\n                    ...state,\n                    series: state.series.concat(action.payload.data)\n                }\n            \n            case prefixName + SET_LOCATIONS:\n                return {\n                    ...state,\n                    locations : action.payload.locations\n                }\n            \n            case prefixName + SET_COUNTDOWN:\n                return{\n                    ...state,\n                    countdown : action.payload.countdown\n                }\n\n            default:\n                return state\n        }\n    }\n}\n\n","import { USER_LOADING, USER_LOADED, USER_LOGOUT, LOGIN_FAILED, LOGIN_SUCCESS } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: null,\n    user: null\n}\n\nconst auth = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case USER_LOADED:       \n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }; \n\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                token: action.payload.token,\n                isLoading: false,\n                isAuthenticated: true,\n                user: action.payload.username\n            }\n\n        case LOGIN_FAILED:\n        case USER_LOGOUT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: null,\n                isLoading: false\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default auth;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport { mainLight, secondaryDark } from '../helpers/colors';\nimport ToolbarQuery from './APIToolbar';\n\n\n//calling API\nimport axios from 'axios';\n\n\n//redux state handling\nimport store from '../redux/store';\nimport {setAPIOption, setData} from '../redux/actions/dashboards';\nimport {connect} from 'react-redux';\nimport {setTimeCountdown} from '../redux/actions/dashboards'\nimport { extractDataByKey, apiEndPoint, APIkey } from '../helpers/APIservices';\n\n//state template\nvar tickCountdown = 0;\nvar updateInterval;\nconst chartName = 'circleChart';\naxios.defaults.baseURL = 'https://nguyenkim.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst options = {\n    durations: ['month','day'],\n    timer: [10, 60, 3600],\n}\n\n\nclass Index extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            options: {\n                labels: ['rating 1', 'rating 2', 'rating 3', 'rating 4', 'rating 5'],\n                chart: {\n                    id:chartName,\n                    width: '60%',\n                    foreColor: mainLight,\n                    fontFamily: 'Helvetica, Arial, sans-serif',\n                    fontSize: 800,\n                    toolbar: {\n                        show: true,\n                        tools: {\n                            download: true,\n                            selection: true,\n                            zoom: true,\n                            zoomin: true,\n                            zoomout: true,\n                            pan: true,\n                            reset: true\n                        }\n                    },\n                },\n                fill: {\n                    opacity: 0.9,\n                },\n                title: {\n                    text: 'Customer Rating Percentage',\n                    align: 'left'\n                },\n                stroke: {\n                    colors: ['transparent']\n                },\n                theme: {\n                    palette: 'palette1',\n                },\n                plotOptions: {\n                    pie: {\n                        customScale: 1,\n                        offsetX: 0,\n                        offsetY: 0,\n                        expandOnClick: true,\n                        dataLabels: {\n                            offset: 0,\n                            minAngleToShowLabel: 10\n                        },\n                        donut: {\n                            size: '55%',\n                            background: 'transparent',\n                        },\n                    }\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        }\n    }\n\n    \n\n    getLocations = () => {\n        axios.get(`${apiEndPoint}/location?`,\n        {\n            params: {},\n            headers: { \n                \"x-access-token\": store.getState().auth.token\n            }\n        })\n        .then(res => res.data.data)\n        .then(data =>  {\n            options.locations = extractDataByKey(data, 'location');\n        })\n    }\n\n    componentDidMount(){\n        this.getLocations()\n        Object.keys(options).map( obj => { store.dispatch(setAPIOption(obj, options[obj][0], chartName))})\n        this.update()\n        this.resetTimer()\n    }\n\n\n    updateDataByType(type, duration, newData, location=''){\n        const limit = 1;\n        const selection = 'total'\n        axios.get(`${apiEndPoint}/${selection}?`,\n            {\n                params:{\n                    rated: type,\n                    duration: duration,\n                    limit: limit,\n                    location: location\n                },\n                headers: { \n                    \"x-access-token\": this.props.auth.token\n                }\n            }\n        )\n        .then(res => res.data.data )\n        .then(res => {\n            const data = extractDataByKey(res, selection)[0];\n            newData.push({ data : data, name: type})\n            if (newData.length === 5){\n                newData.sort((a, b) => (a.name > b.name) ? 1 : ((a.name < b.name) ? -1 : 0));\n                store.dispatch(setData( extractDataByKey(newData, 'data'), chartName))\n            }\n        })\n        \n    }\n\n    updateCountdown = () => {\n        if (tickCountdown === 0) {\n            this.update();\n            this.resetTimer()\n        }\n        else\n            tickCountdown -= 1\n        store.dispatch(setTimeCountdown(tickCountdown, chartName))\n    }\n\n    resetTimer = () => {\n        clearInterval(updateInterval);\n        tickCountdown = store.getState().circleDashboard.timer;\n        updateInterval = setInterval(this.updateCountdown, 1000)\n    }\n\n    update = () => {\n        var newData = []\n        axios.all(\n            [1,2,3,4,5].map( val => \n                this.updateDataByType(val, this.props.options.durations, newData, this.props.options.locations))\n        )\n    }\n\n    optionChange = (option, value) => {\n        store.dispatch(setAPIOption(option, value, chartName));\n        this.update()\n        this.resetTimer()\n\n        switch (option) {\n            case 'timer':\n                \n                break\n\n            case 'views':\n                break\n\n            default:\n                break\n        }\n    }\n\n    render(props) {\n        return (\n            <div style={{ borderRadius: 0, marginTop: 10, display: 'flex', flexDirection: 'column', background: secondaryDark }}>\n                <ToolbarQuery  \n                    options={options} \n                    selections={this.props.options} \n                    onOptionChange={this.optionChange}\n                    dropdown={['locations']}\n                    countdown={tickCountdown}\n                     />\n                <Chart options={this.state.options} series={this.props.options.data} type='donut' />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        options : state.circleDashboard,\n        auth: state.auth\n    }\n)\n\nexport default connect(mapStateToProps)(Index);","import {GET_ERROR,  GET_SUCCESS, CLEAR_MESSAGES} from './types';\nexport const ERRORS = ['loginFailed', 'severError'];\n\nexport const ERRORS_HEADING = {\n    loginFailed : 'Authentication Error !',\n    severError : 'Server error!',\n}\n\nexport const returnError = (error, messages) => {\n\n    return {\n        type: GET_ERROR,\n        payload:{\n            [error]: messages\n        }\n    }\n}\n\nexport const returnSuccess = (success, messages) => {\n    return {\n        type: GET_SUCCESS,\n        payload:{\n            [success]: messages\n        }\n    }\n}\n\nexport const clearMessages = () => {\n    return {\n        type: CLEAR_MESSAGES,\n        payload:{}\n    }\n}","import {GET_ERROR, GET_SUCCESS, CLEAR_MESSAGES} from '../actions/types';\nimport {ERRORS} from '../actions/error'\n\nvar initialState = {\n    success: {},\n    error: {}\n}\n\n\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type){\n\n        case GET_ERROR:\n            return{\n                ...state,\n                error: action.payload\n            }\n        \n        case GET_SUCCESS:\n            return{\n                ...state,\n                success: action.payload\n            }\n\n        case CLEAR_MESSAGES:\n            return{\n                error: {},\n                success: {}\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import entityDashboard from './reducers/dashboard';\nimport auth from './reducers/auth';\nimport error from './reducers/error'\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nconst reducer = combineReducers({generalDashboard: entityDashboard('generalChart'), circleDashboard: entityDashboard('circleChart'), columnDashboard: entityDashboard('columnChart'), auth: auth, messages:error});\nconst store = createStore(reducer, {}, applyMiddleware(thunk));\nexport default store;","import { SET_DATA, SET_LABELS, SET_SERIES, APPEND_SERIES, SET_COUNTDOWN } from './types';\n\n\n\nexport const setAPIOption = (option, value, prefix) => {\n    return {\n        type: `${prefix}SET_${option.toUpperCase()}`,\n        payload:{\n            [option] : value\n        }\n    }\n}\n\n\nexport const setData = (data, prefix) => {\n    return {\n        type: prefix+SET_DATA,\n        payload:{\n            data: data\n        }\n    }\n}\n\nexport const setSeries = (series, prefix) => {\n    return {\n        type: prefix+SET_SERIES,\n        payload:{\n            series: series\n        }\n    }\n}\n\nexport const appendSeries = (data, prefix) => {\n    return{\n        type: prefix+APPEND_SERIES,\n        payload:{\n            data : data\n        }\n    }\n}\n\n\nexport const setLabels = (labels, prefix) => {\n    return {\n        type: prefix+SET_LABELS,\n        payload:{\n            labels : labels,\n        }\n    }\n}\n\nexport const setTimeCountdown = (tick, prefix) => {\n    return {\n        type:prefix+SET_COUNTDOWN,\n        payload:{\n            countdown: tick\n        }\n    }\n}","\nexport const APIoptions = {\n\n    modes: ['average', 'sum'],\n    durations: ['hour', 'month', 'day'],\n    limits: [7, 12, 24],\n    timers: [30, 60, 3600],\n    views: ['area', 'line'],\n    locations: [],\n    categories: [],\n\n};\n\nexport const APIversion = 'v1'\nexport const timestampKey = 'day';\nexport const apiEndPoint = `/api/${APIversion}/dashboard`;\nexport const APIkey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImFkbWluIjp0cnVlLCJpYXQiOjE1NjA5NjQ0MTd9.k89Ufa2OiY3fXCPbRIHzLPWpiphy-G6O6Q-zo57gEeg';\n\n\nexport const extractDataByKey = (data, key) => {\n    const res = data.map(val =>  val[key]);\n    return res\n}\n\nexport const serialData = (data, label, display) => {\n    // return list object representation to work with APEX\n    return {\n        data: data,\n        name: label,\n        type: display\n    }\n}\n\nexport const extractFromTimestamp = (timestamps, extractKey) => {\n\n    switch(extractKey){\n        case 'hour':\n            return timestamps.map( time => { \n                var t = new Date(time); \n                return t.getHours()});\n\n        \n        case 'day':\n            return timestamps.map( time => { \n                var t = new Date(time);\n                return t.getDay()});\n\n        \n        case 'month':\n            return timestamps.map( time => { \n                var t = new Date(time);\n                return t.getMonth()});\n\n\n        default:\n            break      \n    }\n}\n\nexport const configHeader = (token) => {\n    return {\n        headers:{\n            \"x-access-token\" : token\n        }\n    }\n}","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport ApexChart from 'apexcharts';\nimport { secondaryDark, ratingColors, mainLight } from '../helpers/colors';\nimport ToolbarQuery from './APIToolbar';\nimport axios from 'axios';\n\n\n\n\nimport { connect } from 'react-redux';\nimport store from '../redux/store';\nimport { setAPIOption, appendSeries, setSeries, setData, setTimeCountdown } from '../redux/actions/dashboards';\nimport { extractDataByKey, serialData, timestampKey, apiEndPoint, configHeader, APIkey } from '../helpers/APIservices';\nimport { extractFromTimestamp } from '../helpers/timeParser';\n\n\n//state template\naxios.defaults.baseURL = 'https://nguyenkim.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst chartName = 'generalChart';\nconst strokeWidth = 2;\n\nvar updateInterval;\nvar tickCountdown = 0;\n\nconst options = {\n    modes: [],\n    durations: ['hour', 'day', 'month'],\n    limits: [7, 12, 24],\n    timer: [10, 60, 3600],\n    views: ['area', 'line'],\n    categories: [],\n}\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            countdown: '',\n            series: [],\n            optionsMixedChart: {\n                chart: {\n                    width: '100%',\n                    background: secondaryDark,\n                    id: chartName,\n                },\n                title: {\n                    text: 'Average customer rating over time',\n                    align: 'center'\n                },\n                colors: [mainLight],\n\n                stroke: {\n                    width: strokeWidth,\n                    opacity: 1,\n                    curve: 'smooth'\n                },\n                markers: {\n                    size: 0,\n                    strokeWidth: 1,\n                    strokeOpacity: 1,\n                    hover: {\n                        size: 4\n                    }\n                },\n                yaxis: {\n                    tickAmount: 5,\n                    min: 0,\n                    max: 5\n                },\n                grid: {\n                    borderColor: '#40475D',\n                },\n                theme: {\n                    mode: 'dark',\n                },\n\n                legend: {\n                    offsetX: 0,\n                    offsetY: -20,\n                    height: 30,\n                    markers: {\n                        width: 20,\n                        height: 10,\n                        radius: 12,\n                    }\n                },\n                fill: {\n                    opacity: 0.7\n                }\n            },\n        }\n\n    }\n\n\n    componentDidMount(props) {\n        Object.keys(options).map((obj) => store.dispatch(setAPIOption(obj, options[obj][0], chartName)));\n        this.update()\n        this.resetTimer()\n    }\n\n    resetSeries = () => {\n        ApexChart.exec(chartName, 'resetSeries')\n    }\n\n    updateDataByType = (kind = null, rated = null, duration = null, limit = null) => {\n        axios.get(`${apiEndPoint}/avg?`,\n            {\n                params: {\n                    rated: rated,\n                    duration: duration,\n                    limit: limit\n                },\n                headers: {\n                    \"x-access-token\": this.props.auth.token\n                }\n            })\n            .then(res => res.data.data)\n            .then(res => {\n                const data = extractDataByKey(res, 'average');\n                const timestamps = extractDataByKey(res, timestampKey);\n                const categories = extractFromTimestamp(timestamps, duration)\n                const series = serialData(data, 'rating AVG', store.getState().generalDashboard.views);\n                store.dispatch(appendSeries(series, chartName));\n                // update ApexChart\n                ApexChart.exec(chartName, 'updateOptions', {\n                    xaxis: {\n                        categories: categories\n                    }\n                });\n\n                if (kind === 'avg') {\n                    ApexChart.exec(chartName, 'updateOptions', {\n                        yaxis: {\n                            min: 0,\n                            tickAmount: 5,\n                            max: 5\n                        }\n                    })\n                }\n                store.dispatch(setData([series], chartName))\n            })\n            .catch(err => console.log(err))\n    }\n\n    \n    updateCountdown = () => {\n        if (tickCountdown === 0) {\n            this.update();\n            this.resetTimer()\n        }\n        else\n            tickCountdown -= 1\n        store.dispatch(setTimeCountdown(tickCountdown, chartName))\n    }\n\n    resetTimer = () => {\n        clearInterval(updateInterval);\n        tickCountdown = store.getState().generalDashboard.timer;\n        updateInterval = setInterval(this.updateCountdown, 1000);\n\n    }\n\n    update = () => {\n        this.updateDataByType(\n            this.props.options.modes,\n            1,\n            this.props.options.durations,\n            this.props.options.limits\n        )\n    }\n\n\n    optionChange = (option, value) => {\n        store.dispatch(setAPIOption(option, value, chartName));\n        this.update()\n        this.setState({ series: this.state.series })\n        switch (option) {\n            case 'timer':\n                this.resetTimer()\n                break\n\n            case 'views':\n                break\n\n            default:\n                break\n        }\n\n\n    }\n\n    render(props) {\n        return (\n            <div style={{ borderRadius: 0, marginTop: 10, display: 'flex', flexDirection: 'column', background: secondaryDark, minHeight:'45vw' }}>\n                <ToolbarQuery onOptionChange={this.optionChange} options={options} selections={this.props.options} countdown={this.props.options.countdown} />\n                <Chart options={this.state.optionsMixedChart}\n                    series={this.props.options.data}\n                    type='line' />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        options: state.generalDashboard,\n        auth: state.auth\n    }\n)\nexport default connect(mapStateToProps)(Index);\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport ApexChart from 'apexcharts';\nimport { secondaryDark, ratingColors } from '../helpers/colors';\nimport ToolbarQuery from './APIToolbar';\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport store from '../redux/store';\nimport { setAPIOption, appendSeries, setSeries, setTimeCountdown } from '../redux/actions/dashboards';\nimport { extractDataByKey, serialData, timestampKey, apiEndPoint, APIkey } from '../helpers/APIservices';\nimport { extractFromTimestamp } from '../helpers/timeParser';\n\n//state template\naxios.defaults.baseURL = 'https://nguyenkim.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst chartName = 'columnChart';\nconst strokeWidth = 2;\n\nvar tickCountdown = 0;\nvar updateInterval;\n\nvar options = {\n    modes: [],\n    durations: ['hour', 'day', 'month'],\n    limits: [7, 12, 24],\n    timer: [10, 60, 3600],\n    views: ['column', 'area', 'line'],\n\n}\n\n\n\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            locations : [],\n            series: [],\n            optionsMixedChart: {\n                chart: {\n                    width: '100%',\n                    background: secondaryDark,\n                    id: chartName,\n                },\n                title: {\n                    text: 'Total customer rating over time',\n                    align: 'center'\n                },\n                colors: ratingColors,\n                stroke: {\n                    width: strokeWidth,\n                    opacity: 1,\n                    curve: 'smooth'\n                },\n                markers: {\n                    size: 0,\n                    strokeWidth: 1,\n                    strokeOpacity: 1,\n                    hover: {\n                        size: 4\n                    }\n                },\n                yaxis: {\n                    tickAmount: 5,\n                    min: 0,\n                    max: 5\n                },\n                grid: {\n                    borderColor: '#40475D',\n                    xaxis: {\n                        lines: {\n                            show: true\n                        }\n                    },  \n                },\n                theme: {\n                    mode: 'dark',\n                },\n                legend: {\n                    offsetX: 0,\n                    offsetY: -20,\n                    height: 30,\n                    markers: {\n                        width: 20,\n                        height: 10,\n                        radius: 12,\n                    }\n                },\n                fill: {\n                    opacity: 0.7\n                },\n                dataLabels: {\n                    enabled: false,\n                }\n            },\n        }\n\n    }\n\n\n    componentDidMount(props) {\n        this.getLocations()\n        Object.keys(options).map((obj) => store.dispatch(setAPIOption(obj, options[obj][0], chartName)));\n        this.update()\n        this.resetTimer()\n    }\n\n    getLocations = () => {\n        axios.get(`${apiEndPoint}/location?`,\n        {\n            params: {},\n            headers: { \n                \"x-access-token\": this.props.auth.token\n            }\n        })\n        .then(res => res.data.data)\n        .then(data =>  {\n            options.locations = extractDataByKey(data, 'location');\n        })\n    }\n\n\n    updateDataByType = (kind = null, type = null, duration = null, limit = null, location=null) => {\n        const keyMap = {\n            'avg' : 'average',\n            'total' : 'total',\n        }\n\n        axios.get(`${apiEndPoint}/${kind}?`,\n            {\n                params: {\n                    rated: type,\n                    duration: duration,\n                    limit: limit,\n                    location: location\n                },\n                headers: { \n                    \"x-access-token\": this.props.auth.token\n                }\n            })\n            .then(res => res.data.data)\n            .then(res => {\n                const data = extractDataByKey(res, keyMap[kind]);\n                const timestamps = extractDataByKey(res, timestampKey);\n                const categories = extractFromTimestamp(timestamps, duration)\n                const series = serialData(data, 'rating ' + type, store.getState().columnDashboard.views);\n                store.dispatch(appendSeries(series, chartName));\n\n                // update ApexChart\n                ApexChart.exec(chartName, 'updateOptions', {\n                    xaxis: {\n                        categories: categories\n                    }\n                });\n\n                if (kind === 'avg') {\n                    ApexChart.exec(chartName, 'updateOptions', {\n                        yaxis: {\n                            min: 0,\n                            tickAmount: 5,\n                            max: 5\n                        }\n                    })\n                }\n                else {\n                    if (this.props.options.series.length === 5) {\n                        ApexChart.exec(chartName, 'updateOptions', {\n                            yaxis: {\n                                min: 0,\n                                tickAmount: 5,\n                                max: Math.max(...this.props.options.series.map((obj) => Math.max(...obj.data)))\n                            }\n                        })\n                    }\n                }\n                if (this.props.options.series.length === 5) {\n                    const newSeries = this.props.options.series.sort((a, b) => (a.name > b.name) ? 1 : ((a.name < b.name) ? -1 : 0))\n                    ApexChart.exec(chartName, 'updateSeries', newSeries)\n                    this.setState({\n                        series: newSeries\n                    })\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateCountdown = () => {\n        if (tickCountdown === 0) {\n            this.update();\n            this.resetTimer()\n        }\n        else\n            tickCountdown -= 1\n        store.dispatch(setTimeCountdown(tickCountdown, chartName))\n    }\n\n    resetTimer = () => {\n        clearInterval(updateInterval);\n        tickCountdown = store.getState().columnDashboard.timer;\n        updateInterval = setInterval(this.updateCountdown, 1000)\n    }\n\n    update = () => {\n        const overrideOptions = {\n            modes: 'total'\n        }\n\n        axios.all(\n            [1, 2, 3, 4, 5].map(rating => this.updateDataByType(\n                overrideOptions.modes,\n                rating,\n                this.props.options.durations,\n                this.props.options.limits,\n                this.props.options.locations\n            ))\n        )\n            .then(res => store.dispatch(setSeries([], chartName)))\n\n    }\n\n    optionChange = (option, value) => {\n        store.dispatch(setAPIOption(option, value, chartName));\n        this.update()\n    \n        switch (option) {\n            case 'timer':\n                this.resetTimer()\n                break\n\n            case 'views':\n                this.setState({ series: this.state.series })\n                break\n\n            default:\n                break\n        }\n        \n        \n    }\n\n    render(props) {\n        return (\n            <div style={{ borderRadius: 0, marginTop: 10, display: 'flex', flexDirection: 'column', background: secondaryDark, minHeight:'45vw' }}>\n                <ToolbarQuery \n                    onOptionChange={this.optionChange} \n                    options={options} \n                    selections={this.props.options}\n                    dropdown={['locations']}\n                    countdown={this.props.options.countdown}\n                />\n                <Chart options={this.state.optionsMixedChart} series={this.state.series} type='bar' />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        options: state.columnDashboard,\n        auth: state.auth\n    }\n)\nexport default connect(mapStateToProps)(Index);\n","import React, { Component } from 'react';\nimport { Container, ListGroup, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaughBeam, faSmile, faMeh, faFrown, faAngry } from '@fortawesome/free-solid-svg-icons';\nimport { secondaryDark, mainLight } from '../helpers/colors';\n\nimport { } from '../helpers/timeParser';\n\nimport { extractDataByKey } from '../helpers/APIservices'\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://nguyenkim.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst style = {\n    container: {\n        overflowY: 'scroll',\n        maxHeight: '20rem',\n        backgroundColor: secondaryDark,\n        color: '#aaaaaa'\n    }\n}\n\nvar intervalCall;\n\nconst limit = 20;\nconst sastisfactionIcon = [faAngry, faFrown, faMeh, faSmile, faLaughBeam];\n\nconst Comment = (props) => {\n    let d = new Date(props.date);\n\n    return <p > {d.toLocaleString()} <FontAwesomeIcon icon={sastisfactionIcon[props.rated - 1]} /> {props.feedback} </p>\n}\n\nexport default class Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: []\n        }\n    }\n    componentDidMount() {\n        this.update()\n        setInterval(this.update, 1000);\n    }\n\n    update = () => {\n        axios.get(\n            'api/v1/dashboard/comment?',\n            {\n                params: {\n                    limit: limit\n                },\n                headers: {\n                    \"x-access-token\": localStorage.getItem('token')\n                }\n            }\n        )\n            .then(res => res.data.data)\n            .then(data => {\n                this.setState({ comments: data });\n                // this.state.comments.map(obj =>  <Comment rated={obj.rated} feedback={obj.comment} />  )\n            }\n\n            )\n    }\n\n    render() {\n\n        return (\n\n            \n            <Container >\n                <Row>\n                    <div style={{ position: 'sticky', top: 0, background: secondaryDark, width: '90%', height:'10%', color:mainLight }}>\n                        <h3> Recent comments </h3>\n                    </div>\n                </Row>\n\n                <Row style={{...style.container, maxHeight:'30vw'}}>\n                    <ListGroup variant='flush' >\n                        {this.state.comments.map(obj => <Comment date={obj.created_at} rated={obj.rated} feedback={obj.comment} />)}\n                    </ListGroup>\n                </Row>\n\n            </Container>\n\n        )\n    }\n}","import axios from 'axios';\nimport { USER_LOADING, USER_LOGOUT, USER_LOADED, USER_LOGIN, LOGIN_SUCCESS, GET_ERROR } from './types';\nimport { ERRORS_HEADING } from './error'\naxios.defaults.baseURL = 'https://nguyenkim.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nexport const loadAdmin = () => (dispatch, getState) => {\n\n    dispatch({ type: USER_LOADING });\n    const token = getState().auth.token\n    axios.get('/api/v1/auth/user', {\n        params: {},\n        headers: {\n            'x-access-token': token\n        }\n    })\n        .then(res => dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        }))\n        .catch(err => {\n            // if (!err.response)\n            //     dispatch({\n            //         type: GET_ERROR,\n            //         payload: {\n            //             [ERRORS_HEADING.severError]: 'Sever is not responding!'\n            //         }\n            //     })\n            }\n        )\n}\n\nexport const login = (username, password) => dispatch => {\n\n    axios.post(\n        'api/v1/auth/login',\n        {\n            username: username,\n            password: password,\n        }\n    )\n        .then(res => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            if (err.response)\n                dispatch({\n                    type: GET_ERROR,\n                    payload: {\n                        [ERRORS_HEADING.loginFailed]: \"Invalid login or password\"\n                    }\n                })\n            else\n                dispatch({\n                    type: GET_ERROR,\n                    payload: {\n                        [ERRORS_HEADING.severError]: 'Sever is not responding!'\n                    }\n                })\n            }\n        )\n}\n\nexport const logout = () => (dispatch, getState) => {\n\n    dispatch({\n        type: USER_LOGOUT\n    })\n\n}","import React, { Component } from 'react';\nimport { Col, Row, Container, Button, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n// Charts\nimport PercentageChart from '../components/circleChart';\nimport LineChart from '../components/generalChart';\nimport ColumnChart from '../components/columnChart';\nimport CommentSection from '../components/CommentSection';\n\nimport NK_logo from '../static/images/logo_nk_dark.png'\nimport { mainDark, secondaryDark, mainLight } from '../helpers/colors';\nimport { Redirect } from 'react-router-dom';\n\nimport store from '../redux/store';\nimport { logout } from '../redux/actions/auth'\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://nguyenkim.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\n\n\n\n\nconst style = {\n    responsive: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    brand: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: 100,\n        color: '#aaaaaa',\n        fontFamily: 'Quantico',\n        background: secondaryDark,\n        margin: 5,\n        borderRadius: 10\n    },\n    btn: {\n        background: secondaryDark,\n        margin: 10,\n        borderRadius: 10,\n        minHeight: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n\n}\nclass Index extends Component {\n\n    render(props) {\n        return (\n            !this.props.isAuthenticated ?\n                <Redirect to='/login'></Redirect>\n                :\n                <Container fluid style={{ backgroundColor: mainDark }}>\n                    <Row style={style.responsive}>\n                        <Col xs={9} md={9} xl={9} sm={9} lg={9} style={style.brand}>\n                            <h2 style={{ fontSize: '3vw', color: mainLight }}>NGUYEN KIM RATING DASHBOARD</h2>\n                        </Col>\n                        <Col xs={2} md={2} xl={2} sm={2} lg={2} style={style.btn}>\n                            <Button variant='outline-info' onClick={() => store.dispatch(logout())}>Logout</Button>\n                        </Col>\n                    </Row>\n                    <Row style={{ ...style.responsive }}>\n                        <Col xs={11} md={11} xl={5} sm={11} lg={5} style={{ border: `1px solid ${secondaryDark}`, background: secondaryDark, borderRadius: 10, margin: 10 }} >\n                            <PercentageChart />\n                        </Col>\n                        <Col xs={11} md={11} xl={5} sm={11} lg={5} style={{ border: `1px solid ${secondaryDark}`, background: secondaryDark, borderRadius: 10, margin: 10 }} >\n                            <LineChart />\n                        </Col>\n                        <Col xs={11} md={11} xl={10} sm={11} lg={10} style={{ border: `1px solid ${secondaryDark}`, background: secondaryDark, borderRadius: 10, margin: 10 }} >\n                            <ColumnChart></ColumnChart>\n                        </Col>\n                        <Col xs={11} md={11} xl={10} sm={11} lg={10} style={{ border: `1px solid ${secondaryDark}`, background: secondaryDark, borderRadius: 10, margin: 10 }} >\n                            <CommentSection></CommentSection>\n                        </Col>\n                    </Row>\n                </Container>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => (\n    {\n        isAuthenticated: state.auth.isAuthenticated\n    }\n)\nexport default connect(mapStateToProps)(Index);\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nexport const AlertError = (props) => (\n    props.display &&\n    <Alert variant=\"danger\" show={true} dismissible onClose={props.onClose} >\n        <Alert.Heading>{props.heading}</Alert.Heading>\n        <p>{props.text}</p>\n    </Alert>\n\n)\n\nexport const AlertSucceed = (props) => (\n    props.display &&\n    <Alert variant=\"success\" show={props.display} dismissible onClose={props.onClose} >\n        <Alert.Heading>{props.heading}</Alert.Heading>\n        <p>{props.text}</p>\n    </Alert>\n)","import React, { Component } from 'react';\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\nimport { mainLight, secondaryDark, mainDark } from '../helpers/colors';\nimport {ERRORS_HEADING, returnError, clearMessages} from '../redux/actions/error'\nimport { AlertError } from '../components/Alerts'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport store from '../redux/store';\nimport {login} from '../redux/actions/auth'\n\n\nconst style = {\n    responsive: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    brand: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: 80,\n        color: '#aaaaaa',\n        fontFamily: 'Quantico',\n        background: secondaryDark,\n        margin: '10px 20% 10px 20%',\n\n    },\n    text:{\n        color:'#dddddd'\n    }\n}\n\n\nclass Index extends Component {\n    constructor(){\n        super();\n        this.state = {\n            username: '',\n            password: '',\n        }\n    }\n\n\n    render(props) {\n\n        return (\n            this.props.isAuthenticated ?\n            <Redirect to='/'></Redirect>\n            :\n            <Container>\n                \n                <Row style={style.responsive}>\n                    <Col xs={10} sm={10} md={12} lg={8} xl={8} style={{...style.brand}}>\n                        <h5 style={{ fontSize: '3vw', color: mainLight, whiteSpace:'nowrap' }}>NGUYENKIM RATING DASHBOARD</h5>\n                    </Col>\n                </Row>\n                \n                <Row style={style.responsive}>\n                \n                    <Col xs={10} sm={10} md={12} lg={8} xl={8} style={{background:secondaryDark,  padding: '5%'}}>\n                        <AlertError display={ERRORS_HEADING.loginFailed in this.props.messages.error} onClose={() => { store.dispatch(clearMessages()) }}  \n                                    heading={ERRORS_HEADING.loginFailed} \n                                    text={ this.props.messages.error ? this.props.messages.error[ERRORS_HEADING.loginFailed] : {}} />\n                        <AlertError display={ERRORS_HEADING.severError in this.props.messages.error} onClose={() => { store.dispatch(clearMessages()) }}  \n                                    heading={ERRORS_HEADING.severError} \n                                    text={ this.props.messages.error ? this.props.messages.error[ERRORS_HEADING.severError] : {}} />\n                        <Form fullWidth>\n                        <h1 style={{color:'#dddddd'}}>Login</h1>\n                            <Form.Group controlId=\"formBasicEmail\" lg>\n                                <Form.Label style={style.text}>Username</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"admin\" \n                                    size=\"lg\" \n                                    style={{backgroundColor: secondaryDark, color:'#ffffff'}}\n                                    value={this.state.username}\n                                    onChange={(e) => this.setState({username: e.target.value})}\n                                    />\n                                <Form.Text className=\"text-muted\" >\n                                    Admin login only!\n                                </Form.Text>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\" lg>\n                                <Form.Label style={style.text}>Password</Form.Label>\n                                <Form.Control \n                                    type=\"password\" \n                                    placeholder=\"password\" \n                                    size=\"lg\" \n                                    style={{backgroundColor: secondaryDark, color:'#ffffff'}}\n                                    value={this.state.password}\n                                    onChange={(e) => this.setState({password: e.target.value})}\n                                    />\n                            </Form.Group>\n\n                            <Button variant=\"info\" type=\"button\" onClick={() => store.dispatch(login(this.state.username, this.state.password))} >\n                                Submit\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => (\n    {\n        isAuthenticated: state.auth.isAuthenticated,\n        messages: state.messages\n        \n    }\n)\n\nexport default connect(mapStateToProps)(Index);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './views/Home';\nimport Login from './views/Login';\n\n\nimport store from './redux/store';\nimport {loadAdmin} from './redux/actions/auth'\n\n\n\nclass App extends Component {\n\n    componentDidMount(){\n        store.dispatch(loadAdmin())\n    };\n\n    render(props) {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/login\" component={Login} />\n                    <Route exact path=\"/\" component={Home} />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider> , \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}